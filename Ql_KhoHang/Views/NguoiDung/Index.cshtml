@using Newtonsoft.Json
@using Ql_KhoHang.Dtos
@{
	ViewData["Title"] = "Home";
	Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

}



			<div class="row">
				
					<div class="row">
			<div class="card board1 fill">
				<div class="card-body">
					<div class="dash-widget-header">
						<div class="col-md-5">
							<div class="card">
								<div class="card-body">
									<h5 class="card-title">Tổng số sản phẩm trong kho</h5>
									<hr />
									<p class="card-text">
										<strong>@ViewBag.TotalProducts</strong> sản phẩm
									</p>
								</div>
							</div>
						</div>
						<hr />
						<div style="margin-left: 30px;"></div> <!-- Tạo khoảng trắng bằng CSS -->
						<div class="col-md-7">
							<div class="card mt-4">
								<div class="card-body">
									<h5 class="card-title">Top 5 Sản Phẩm Có Số Lượng Nhiều Nhất</h5>
									<canvas id="top5ProductsChart" width="400" height="200"></canvas>
								</div>
							</div>
						</div>
					</div>
			</div>
					</div>
		
				</div>
			</div>
			<div class="row">
				<div class="col-md-12 col-lg-6">
					<div class="card card-chart">
						<div class="card-header">
							<h4 class="card-title">Phiếu nhập hàng trong tháng</h4>
						</div>
						<div class="card-body">
				<!-- Biểu đồ -->
				<canvas id="importOrdersChart" width="400" height="200"></canvas>
						</div>
					</div>
				</div>
				<div class="col-md-12 col-lg-6">
					<div class="card card-chart">
						<div class="card-header">
							<h4 class="card-title">CÁC SẢN PHẨM ĐƯỢC XUẤT NHIỀU NHẤT</h4>
						</div>
						<div class="card-body">
							<canvas height="285" id="pieChart"></canvas>
						</div>
					</div>
				</div>

				<script src="~/js/chart.js"></script>
				<script src="~/js/customchart.js"></script>

			</div>
@section Scripts {
	<!-- Validation Scripts -->
	<partial name="_ValidationScriptsPartial" />
	<!-- SweetAlert -->
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

	<script>
		// Hiển thị thông báo thành công
		@if (TempData["SuccessMessage"] != null)
		{
			<text>
					Swal.fire({
						title: 'Thành công!',
					text: '@Html.Raw(TempData["SuccessMessage"])',
					icon: 'success',
					confirmButtonText: 'OK'
									});
			</text>
		}

			// Hiển thị thông báo lỗi
		@if (TempData["ErrorMessage"] != null)
		{
			<text>
					Swal.fire({
						title: 'Lỗi!',
					text: '@Html.Raw(TempData["ErrorMessage"])',
					icon: 'error',
					confirmButtonText: 'OK'
									});
			</text>
		}
	</script>
	<script>
								// Dữ liệu từ ViewBag
								var topProducts = @Html.Raw(JsonConvert.SerializeObject(ViewBag.Top5Products));

		// Lấy tên sản phẩm và số lượng
		var labels = topProducts.map(product => product.TenSanPham);
		var data = topProducts.map(product => product.SoLuong);

		// Vẽ biểu đồ
		var ctx = document.getElementById('top5ProductsChart').getContext('2d');
		var chart = new Chart(ctx, {
			type: 'bar',
			data: {
				labels: labels,
				datasets: [{
					label: 'Số lượng',
					data: data,
					backgroundColor: [
						'rgba(75, 192, 192, 0.2)',
						'rgba(54, 162, 235, 0.2)',
						'rgba(255, 206, 86, 0.2)',
						'rgba(255, 99, 132, 0.2)',
						'rgba(153, 102, 255, 0.2)'
					],
					borderColor: [
						'rgba(75, 192, 192, 1)',
						'rgba(54, 162, 235, 1)',
						'rgba(255, 206, 86, 1)',
						'rgba(255, 99, 132, 1)',
						'rgba(153, 102, 255, 1)'
					],
					borderWidth: 1
				}]
			},
			options: {
				responsive: true,
				scales: {
					y: {
						beginAtZero: true,
						ticks: {
							stepSize: 1, // Chỉ số nguyên
							callback: function (value) {
								return Number.isInteger(value) ? value : null; // Chỉ hiển thị số nguyên
							}
						}
					}
				}
			}
		});
	</script>
}

